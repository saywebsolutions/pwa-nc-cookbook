!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!TypeScript	C,constant	/constants/
!_TAG_KIND_DESCRIPTION!TypeScript	G,generator	/generators/
!_TAG_KIND_DESCRIPTION!TypeScript	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!TypeScript	c,class	/classes/
!_TAG_KIND_DESCRIPTION!TypeScript	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!TypeScript	f,function	/functions/
!_TAG_KIND_DESCRIPTION!TypeScript	g,enum	/enums/
!_TAG_KIND_DESCRIPTION!TypeScript	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!TypeScript	m,method	/methods/
!_TAG_KIND_DESCRIPTION!TypeScript	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!TypeScript	p,property	/properties/
!_TAG_KIND_DESCRIPTION!TypeScript	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!TypeScript	0.0	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/user/repos/pwa-nc-cookbook/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/b73cb2b69/
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
AppAbout	src/pages/app-about/app-about.ts	/^export class AppAbout extends LitElement {$/;"	c
AppHeader	src/components/header.ts	/^export class AppHeader extends LitElement {$/;"	c
AppHome	src/pages/app-home.ts	/^export class AppHome extends LitElement {$/;"	c
AppIndex	src/app-index.ts	/^export class AppIndex extends LitElement {$/;"	c
RecipeList	src/components/recipe-list.ts	/^export class RecipeList extends LitElement {$/;"	c
alert	src/pages/app-home.ts	/^    const alert = Object.assign(document.createElement('sl-alert'), {$/;"	C	method:AppHome.showAlert
apiToken	src/components/recipe-list.ts	/^  @property() apiToken = '';$/;"	p	class:RecipeList
apiToken	src/pages/app-home.ts	/^  @property() apiToken = '';$/;"	p	class:AppHome
apiUrl	src/components/recipe-list.ts	/^  @property() apiUrl = '';$/;"	p	class:RecipeList
apiUrl	src/pages/app-home.ts	/^  @property() apiUrl = '';$/;"	p	class:AppHome
apiVersion	src/pages/app-home.ts	/^  @property() apiVersion = '';$/;"	p	class:AppHome
baseURL	src/router.ts	/^const baseURL: string = (import.meta as any).env.BASE_URL;$/;"	C
blob	src/components/recipe-list.ts	/^      const blob = await response.blob();$/;"	C	method:RecipeList.fetchImage
checkConnection	src/pages/app-home.ts	/^  async checkConnection() {$/;"	m	class:AppHome
connectionStatus	src/pages/app-home.ts	/^  @property() connectionStatus: 'disconnected' | 'connected' | 'error' = 'disconnected';$/;"	p	class:AppHome
container	src/pages/app-home.ts	/^    const container = this.shadowRoot?.querySelector('.alert-container');$/;"	C	method:AppHome.showAlert
currentPage	src/components/recipe-list.ts	/^  @property() currentPage = 1;$/;"	p	class:RecipeList
data	src/components/recipe-list.ts	/^      const data = await response.json();$/;"	C	method:RecipeList.fetchRecipes
data	src/pages/app-home.ts	/^      const data = await response.json();$/;"	C	method:AppHome.checkConnection
data	src/pages/app-home.ts	/^      const data = await response.json();$/;"	C	method:AppHome.fetchRecipes
dialog	src/pages/app-home.ts	/^      const dialog = this.shadowRoot?.querySelector<any>('sl-dialog');$/;"	C	method:AppHome.saveConfiguration
dialog	src/pages/app-home.ts	/^    const dialog = this.shadowRoot?.querySelector<any>('sl-dialog');$/;"	C	method:AppHome.showSettings
enableBack	src/components/header.ts	/^  @property({ type: Boolean}) enableBack: boolean = false;$/;"	p	class:AppHeader
fetchImage	src/components/recipe-list.ts	/^  private async fetchImage(recipeId: string) {$/;"	m	class:RecipeList
fetchRecipes	src/components/recipe-list.ts	/^  async fetchRecipes() {$/;"	m	class:RecipeList
fetchRecipes	src/pages/app-home.ts	/^  async fetchRecipes() {$/;"	m	class:AppHome
firstUpdated	src/app-index.ts	/^  firstUpdated() {$/;"	m	class:AppIndex
firstUpdated	src/pages/app-home.ts	/^  async firstUpdated() {$/;"	m	class:AppHome
handleApiTokenChange	src/pages/app-home.ts	/^  handleApiTokenChange(e: any) {$/;"	m	class:AppHome
handleApiUrlChange	src/pages/app-home.ts	/^  handleApiUrlChange(e: any) {$/;"	m	class:AppHome
isLoading	src/components/recipe-list.ts	/^  @property() isLoading = false;$/;"	p	class:RecipeList
isLoading	src/pages/app-home.ts	/^  @property() isLoading = false;$/;"	p	class:AppHome
loadRecipeImage	src/components/recipe-list.ts	/^  async loadRecipeImage(recipe: any) {$/;"	m	class:RecipeList
message	src/pages/app-home.ts	/^  @property() message = 'Nextcloud Cookbook';$/;"	p	class:AppHome
nextPage	src/components/recipe-list.ts	/^  nextPage() {$/;"	m	class:RecipeList
paginatedRecipes	src/components/recipe-list.ts	/^  get paginatedRecipes() {$/;"	m	class:RecipeList
recipes	src/components/recipe-list.ts	/^  @property() recipes: any[] = [];$/;"	p	class:RecipeList
recipes	src/pages/app-home.ts	/^  @property() recipes: any[] = [];$/;"	p	class:AppHome
recipesPerPage	src/components/recipe-list.ts	/^  @property() recipesPerPage = 20;$/;"	p	class:RecipeList
render	src/app-index.ts	/^  render() {$/;"	m	class:AppIndex
render	src/components/header.ts	/^  render() {$/;"	m	class:AppHeader
render	src/components/recipe-list.ts	/^  render() {$/;"	m	class:RecipeList
render	src/pages/app-about/app-about.ts	/^  render() {$/;"	m	class:AppAbout
render	src/pages/app-home.ts	/^  render() {$/;"	m	class:AppHome
resolveRouterPath	src/router.ts	/^  export function resolveRouterPath(unresolvedPath?: string) {$/;"	f
response	src/components/recipe-list.ts	/^      const response = await fetch(`${this.apiUrl}\/api\/v1\/recipes\/${recipeId}\/image`, {$/;"	C	method:RecipeList.fetchImage
response	src/components/recipe-list.ts	/^      const response = await fetch(`${this.apiUrl}\/api\/v1\/recipes`, {$/;"	C	method:RecipeList.fetchRecipes
response	src/pages/app-home.ts	/^      const response = await fetch(`${this.apiUrl}\/api\/version`, {$/;"	C	method:AppHome.checkConnection
response	src/pages/app-home.ts	/^      const response = await fetch(`${this.apiUrl}\/recipes`, {$/;"	C	method:AppHome.fetchRecipes
router	src/router.ts	/^export const router = new Router({$/;"	C
saveConfiguration	src/pages/app-home.ts	/^  async saveConfiguration() {$/;"	m	class:AppHome
share	src/pages/app-home.ts	/^  share() {$/;"	m	class:AppHome
showAlert	src/pages/app-home.ts	/^  showAlert(type: 'success' | 'error', message: string) {$/;"	m	class:AppHome
showSettings	src/pages/app-home.ts	/^  showSettings() {$/;"	m	class:AppHome
start	src/components/recipe-list.ts	/^    const start = (this.currentPage - 1) * this.recipesPerPage;$/;"	C	method:RecipeList.paginatedRecipes
styles	src/app-index.ts	/^  static styles = css`$/;"	p	class:AppIndex
styles	src/components/header.ts	/^  static styles = css`$/;"	p	class:AppHeader
styles	src/pages/app-about/about-styles.ts	/^export const styles = css`$/;"	C
styles	src/pages/app-about/app-about.ts	/^  static styles = [$/;"	p	class:AppAbout
styles	src/pages/app-home.ts	/^  static styles = [$/;"	p	class:AppHome
styles	src/styles/shared-styles.ts	/^export const styles = css`$/;"	C
title	src/components/header.ts	/^  @property({ type: String }) title = 'pwa-nc-cookbook';$/;"	p	class:AppHeader
updated	src/components/recipe-list.ts	/^  updated(changedProperties: Map<string, any>) {$/;"	m	class:RecipeList
